<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.charlie.mapper.PersonMapper">
    <!--
    1. 据id获取Person对象，同时包含对应的IdenCard对象
    2. 配置/实现 public Person getPersonById(Integer id);
    3. 为了加深理解，先使用容易象到的方法，再分析问题
    4. 如果简单的设置为：resultType="Person"，则person返回的属性card为null，没有实现级联查询
    5. 自定义resultMap，定义返回的结果
    6. 因为getPersonById最终返回的仍然是Person对象，只是有级联的对象，type仍然配置为 type="Person"
    -->
    <resultMap id="PersonResultMap" type="Person">
        <!--属性按照sql语句返回结果顺序匹配-->
        <!--<result property="id" column="id"/>-->
        <!--id-一个Id结果，标记出作为ID的结果可以帮助提高整体性能
        1. property="id" 表示person的属性id，通常是主键
        2. column="id" 表示对应表的字段名
        -->
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <!-- association：一个复杂类型的关联
        1. property="card" 表示对Person对象的card属性
        2. javaType="IdenCard" 表示card属性的类型
        3. column="id" 是从限免的sql语句中查询返回的字段
        -->
        <association property="card" javaType="IdenCard">
            <result property="id" column="id"/>
            <result property="card_sn" column="card_sn"/>
        </association>
    </resultMap>
    <select id="getPersonById" parameterType="Integer" resultMap="PersonResultMap">
        SELECT * FROM `person`, `idencard` WHERE `person`.id=#{id} AND person.card_id=idencard.id;
    </select>

    <!--
    1. 配置/实现方式二：public Person getPersonById2(Integer id);
    2. 这里的方式和前面的不同：
        1) 先通过 select * from `person` where `id`=#{id} 返回person的信息
        2) 再通过card_id值，再执行操作，得到IdenCard数据
    -->
    <resultMap id="PersonResultMap2" type="Person">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <!--
        1. 第二种方式核心思想：将多表查询，分解为多条单表操作，这样简洁易操作，复用性强，推荐！
        2. 而且可以复用前面已经写好的方法-组合使用！在表很多的情况下，非常实用
        3. property="card" 表示Person对象的card属性
        4. column="card_id" 是 select * from `person` where `id`=#{id} 返回的字段card_id
        5. 返回的字段card_id值，会作为getIdenCardById传入参数，来执行
                select `id`, `name`, `card_id` as `hsp_id` from `person` where `id`=#{id}
                如果使用上面的sql语句，则association中column="hsp_id"
        -->
        <association property="card"
                     column="card_id"
                     select="com.charlie.mapper.IdenCardMapper.getIdenCardById"/>
    </resultMap>
    <select id="getPersonById2" parameterType="Integer" resultMap="PersonResultMap2">
        select * from `person` where `id`=#{id}
    </select>

    <!--配置/实现public Person getPersonByCardId(Integer card_id);-->
    <select id="getPersonByCardId" parameterType="Integer" resultType="Person">
        select * from `person` where `card_id`=#{card_id}
    </select>
</mapper>